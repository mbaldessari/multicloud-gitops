---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Values.database.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=True
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeMode: Filesystem
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.database.name }}
  labels:
    app: {{ .Values.database.name }}
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=True
spec:
  strategy:
    type: Recreate
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: {{ .Values.database.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
    spec:
      containers:
        - resources:
            limits:
              memory: 512Mi
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - >-
                  MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER
                  -D $MYSQL_DATABASE -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: mariadb
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-user
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-root-password
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-db
            - name: MYSQL_MASTER_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-master-user
            - name: MYSQL_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: database-master-password
          ports:
            - containerPort: 3306
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: db-data
              mountPath: /var/lib/mysql/data
            - name: db-init
              mountPath: /opt/app-root/src/mysql-init/90-init-data.sh
              subPath: 90-init-data.sh
            - mountPath: /opt/app-root/src/mysql-data/import.sql
              name: db-init
              subPath: import.sql
            - name: db-init
              mountPath: /opt/app-root/src/mysql-data/schema.sql
              subPath: schema.sql
          terminationMessagePolicy: File
          image: {{ .Values.database.image }}
      volumes:
      - configMap:
          defaultMode: 420
          name: db-init
        name: db-init
      - name: db-data
        persistentVolumeClaim:
          claimName: {{ .Values.database.name }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler