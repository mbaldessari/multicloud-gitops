# TODO: Also create a GitOpsCluster.apps.open-cluster-management.io
{{- range .Values.clusterGroup.managedClusterGroups }}
{{- $group := . }}
{{- if not .hostedArgoSites }}
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: private-repo-{{ .name }}-clustergroup-policy
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: {{ .name }}-clustergroup-config
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            include:
              - default
          object-templates:
            - complianceType: mustonlyhave
              objectDefinition:
                kind: Secret
                apiVersion: v1
                type: Opaque
                metadata:
                  name: vp-private-repo-credentials
                  namespace: openshift-gitops
                data: '{{ `{{hub copySecretData "openshift-gitops" "vp-private-repo-credentials" hub}}` }}'
---
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: private-repo-{{ .name }}-placement-binding
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: {{ .name }}-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: private-repo-{{ .name }}-clustergroup-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
{{- end }}
{{- end }}
